import React from "react";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { Clock, User } from "lucide-react";
import { format } from "date-fns";

export default function ArticleCard({ article, featured = false }) {
  const getCategoryLabel = (category) => {
    const labels = {
      essay: "Essay",
      research: "Research",
      cartoon: "Cartoon",
      puzzle: "Puzzle",
      short_story: "Short Story",
      op_ed: "Op-Ed",
      satirical_news: "Satirical News"
    };
    return labels[category] || category;
  };

  if (featured) {
    return (
      <Link 
        to={createPageUrl(`Article?id=${article.id}`)}
        className="block group"
      >
        <article className="grid md:grid-cols-2 gap-8 bg-white p-8 border-b-4 border-black hover:shadow-xl transition-all duration-300">
          {article.featured_image && (
            <div className="overflow-hidden bg-gray-100">
              <img
                src={article.featured_image}
                alt={article.title}
                className="w-full h-80 object-cover transform group-hover:scale-105 transition-transform duration-500"
              />
            </div>
          )}
          <div className="flex flex-col justify-center">
            <div className="flex items-center gap-3 mb-4">
              <span className="text-xs font-bold tracking-widest uppercase text-amber-700">
                {getCategoryLabel(article.category)}
              </span>
              <span className="w-1 h-1 bg-gray-400 rounded-full" />
              <span className="text-xs text-gray-500">
                {format(new Date(article.published_date), "MMMM d, yyyy")}
              </span>
            </div>
            <h2 className="font-serif text-4xl md:text-5xl font-bold leading-tight mb-4 group-hover:text-amber-800 transition-colors">
              {article.title}
            </h2>
            {article.subtitle && (
              <p className="text-xl text-gray-600 mb-4 leading-relaxed">
                {article.subtitle}
              </p>
            )}
            {article.excerpt && (
              <p className="text-gray-700 mb-6 leading-relaxed line-clamp-3">
                {article.excerpt}
              </p>
            )}
            <div className="flex items-center gap-4 text-sm text-gray-600">
              <div className="flex items-center gap-2">
                <User className="w-4 h-4" />
                <span className="font-medium">{article.author}</span>
              </div>
              {article.read_time && (
                <>
                  <span className="w-1 h-1 bg-gray-400 rounded-full" />
                  <div className="flex items-center gap-1">
                    <Clock className="w-4 h-4" />
                    <span>{article.read_time} min read</span>
                  </div>
                </>
              )}
            </div>
          </div>
        </article>
      </Link>
    );
  }

  return (
    <Link 
      to={createPageUrl(`Article?id=${article.id}`)}
      className="block group"
    >
      <article className="bg-white border border-gray-200 hover:shadow-lg transition-all duration-300 h-full flex flex-col">
        {article.featured_image && (
          <div className="overflow-hidden bg-gray-100">
            <img
              src={article.featured_image}
              alt={article.title}
              className="w-full h-48 object-cover transform group-hover:scale-105 transition-transform duration-500"
            />
          </div>
        )}
        <div className="p-6 flex-1 flex flex-col">
          <div className="flex items-center gap-2 mb-3">
            <span className="text-xs font-bold tracking-widest uppercase text-amber-700">
              {getCategoryLabel(article.category)}
            </span>
            <span className="w-1 h-1 bg-gray-400 rounded-full" />
            <span className="text-xs text-gray-500">
              {format(new Date(article.published_date), "MMM d, yyyy")}
            </span>
          </div>
          <h3 className="font-serif text-2xl font-bold leading-tight mb-2 group-hover:text-amber-800 transition-colors">
            {article.title}
          </h3>
          {article.subtitle && (
            <p className="text-gray-600 mb-3 leading-relaxed text-sm">
              {article.subtitle}
            </p>
          )}
          {article.excerpt && (
            <p className="text-gray-700 mb-4 leading-relaxed text-sm line-clamp-3 flex-1">
              {article.excerpt}
            </p>
          )}
          <div className="flex items-center gap-3 text-xs text-gray-600 mt-auto pt-4 border-t border-gray-100">
            <span className="font-medium">{article.author}</span>
            {article.read_time && (
              <>
                <span className="w-1 h-1 bg-gray-400 rounded-full" />
                <span>{article.read_time} min</span>
              </>
            )}
          </div>
        </div>
      </article>
    </Link>
  );
}
